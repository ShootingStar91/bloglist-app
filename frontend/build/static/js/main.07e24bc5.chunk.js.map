{"version":3,"sources":["services/blogs.js","components/Blog.js","components/BlogForm.js","services/login.js","App.js","index.js"],"names":["token","Blog","blog","likeButtonClicked","deleteButtonClicked","useState","visible","setVisible","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","onClick","author","url","likes","user","name","BlogForm","postBlog","setTitle","setAuthor","setUrl","onSubmit","event","preventDefault","id","onChange","target","value","type","baseUrl","service","getAll","axios","get","then","response","data","setToken","newToken","post","headers","Authorization","likeBlog","put","deleteBlog","delete","tryLogin","username","password","console","log","ShowErrormsg","message","className","ShowSuccessmsg","LoginPage","props","handleUsernameChange","handlePasswordChange","App","blogs","setBlogs","setUsername","setPassword","setUser","errormsg","setErrormsg","successmsg","setSuccessmsg","blogFormVisible","setBlogFormVisible","triggerError","setTimeout","triggerSuccess","refreshBlogs","blogService","sort","first","second","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","tryLogout","removeItem","submitBlog","status","exception","confirm","map","ReactDOM","render","document","getElementById"],"mappings":"6JAGIA,E,4DCmDWC,EAnDF,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,kBAAmBC,EAA0B,EAA1BA,oBAEvC,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OAAID,EAEA,sBAAKE,MArBS,CAChBC,WAAY,EACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,GAgBW,UAAQ,YAA/B,UACE,gCAAK,wCAAL,IAAqBX,EAAKY,MAA1B,IAAiC,wBAAQC,QAAS,kBAAMR,GAAW,IAAlC,qBACjC,gCAAK,wCAAL,IAAqBL,EAAKc,UAC1B,gCAAK,wCAAL,IAAqBd,EAAKe,OAC1B,gCAAK,wCAAL,IAAqBf,EAAKgB,MAA1B,IAAiC,wBAAQ,UAAQ,cAAcH,QAb5C,WACvBZ,EACED,GAEFA,EAAKgB,OAAS,GASuB,qBAChChB,EAAKiB,KACJ,gCAAK,0CAAL,IAAuBjB,EAAKiB,KAAKC,QACjC,gCAAK,0CAAL,oBAEF,8BAAK,wBAAQ,UAAQ,gBAAgBL,QAtBhB,WACzBX,EAAoBF,IAqBX,yBAMP,gCACGA,EAAKY,MADR,IACgBZ,EAAKc,OADrB,IAC6B,wBAAQ,UAAQ,cAAcD,QAAS,kBAAMR,GAAW,IAAxD,sBCFpBc,EAtCE,SAAC,GAEX,IADLC,EACI,EADJA,SAGA,EAA0BjB,mBAAS,IAAnC,mBAAOS,EAAP,KAAcS,EAAd,KACA,EAA4BlB,mBAAS,IAArC,mBAAOW,EAAP,KAAeQ,EAAf,KACA,EAAsBnB,mBAAS,IAA/B,mBAAOY,EAAP,KAAYQ,EAAZ,KAkBA,OACE,gCACE,gDACA,uBAAMC,SARW,SAACC,GACpBA,EAAMC,iBACNN,EAASR,EAAOE,EAAQC,IAMtB,UACE,wCAAU,uBAAOY,GAAG,QAAQC,SAhBR,SAACH,GACzBJ,EAASI,EAAMI,OAAOC,aAgBlB,yCAAW,uBAAOH,GAAG,SAASC,SApBT,SAACH,GAC1BH,EAAUG,EAAMI,OAAOC,aAoBnB,sCAAQ,uBAAOH,GAAG,MAAMC,SAfN,SAACH,GACvBF,EAAOE,EAAMI,OAAOC,aAehB,4BAAG,wBAAQH,GAAG,mBAAmBI,KAAK,SAAnC,gC,gBFjCLC,EAAU,aAoCDC,EAJC,CACdC,OA7Ba,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA2BjCC,SAxBO,SAACC,GAChB3C,EAAQ,UAAY2C,GAuBFrB,SApBH,SAACR,EAAOE,EAAQC,GAI/B,OAHgBoB,IAAMO,KAAKV,EAAS,CAAEpB,QAAOE,SAAQC,OAAO,CAC1D4B,QAAS,CAAEC,cAAe9C,KAEbuC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgBbM,SAbb,SAAClB,EAAIX,GAEpB,OADgBmB,IAAMW,IAAId,EAAU,IAAML,EAAI,CAAEX,MAAOA,EAAQ,IAChDqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWHQ,WARrB,SAACpB,GAIlB,OAHgBQ,IAAMa,OAAOhB,EAAU,IAAML,EAAI,CAC/CgB,QAAS,CAAEC,cAAe9C,KAEbuC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UGZ5BN,EAFC,CAAEgB,SAbD,SAACC,EAAUC,GAK1B,OAJAC,QAAQC,IAAI,qBAAsBH,EAAU,IAAKC,GACjChB,IAAMO,KAJR,aAKZ,CAAEQ,SAAUA,EAAUC,SAAUA,IAEnBd,MAAK,SAAAC,GAClB,MAAO,CAAEY,SAAUA,EAAUpD,MAAOwC,EAASC,KAAKzC,MAChDoB,KAAMoB,EAASC,KAAKrB,WCHpBoC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,GAAgC,KAAZA,EACf,KAEF,qBAAK5B,GAAG,qBAAqB6B,UAAU,QAAvC,SAAgDD,KAGnDE,EAAiB,SAAC,GAAmB,IAAhBF,EAAe,EAAfA,QACzB,OAAgB,OAAZA,GAAgC,KAAZA,EACf,KAEF,qBAAK5B,GAAG,uBAAuB6B,UAAU,UAAzC,SAAoDD,KAGvDG,EAAY,SAACC,GACjB,OACE,gCACE,uDACA,uBAAMnC,SAAUmC,EAAMV,SAAtB,UACE,0CAAY,uBAAOtB,GAAG,WAAWC,SAAU+B,EAAMC,0BAEjD,0CACW,uBAAOjC,GAAG,WAAWI,KAAK,WAAWH,SAAU+B,EAAME,0BAEhE,4BACE,wBAAQlC,GAAG,eAAeI,KAAK,SAA/B,6BAuLK+B,EAhLH,WACV,MAA0B3D,mBAAS,IAAnC,mBAAO4D,EAAP,KAAcC,EAAd,KACA,EAAgC7D,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBe,EAAjB,KACA,EAAgC9D,mBAAS,IAAzC,mBAAOgD,EAAP,KAAiBe,EAAjB,KACA,EAAwB/D,mBAAS,MAAjC,mBAAOc,EAAP,KAAakD,EAAb,KACA,EAAgChE,mBAAS,IAAzC,mBAAOiE,EAAP,KAAiBC,EAAjB,KACA,EAAoClE,mBAAS,IAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAA8CpE,oBAAS,GAAvD,mBAAOqE,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,SAACnB,GACpBc,EAAYd,GACZoB,YAAW,WACTN,EAAY,MACX,MAICO,EAAiB,SAACrB,GACtBgB,EAAchB,GACdoB,YAAW,WACTJ,EAAc,MACb,MAECM,EAAe,WACnBC,EAAY5C,SAASG,MAAK,SAAA0B,GACxBA,EAAMgB,MAAK,SAACC,EAAOC,GACjB,OAAGD,EAAMhE,MAAQiE,EAAOjE,OACd,EACCgE,EAAMhE,MAAQiE,EAAOjE,MACvB,EAEA,KAGXgD,EAAUD,OAGdmB,qBAAU,WACRL,MACC,IAEHK,qBAAU,WACR,IAAMC,EAAiBC,OAAOC,aAAaC,QAAQ,cACnD,GAAIH,EAAgB,CAClB,IAAMlE,EAAOsE,KAAKC,MAAML,GACxBhB,EAAQlD,GACR6D,EAAYtC,SAASvB,EAAKnB,UAE3B,IAEH,IAAMmD,EAAQ,iDAAG,WAAOxB,GAAP,wFACfA,EAAMC,iBACN0B,QAAQC,IAAI,2BAFG,kBAIMoC,EAAaxC,SAASC,EAAUC,GAJtC,OAIPlC,EAJO,OAKb6D,EAAYtC,SAASvB,EAAKnB,OAE1BqE,EAAQlD,GACRmE,OAAOC,aAAaK,QAAQ,aAAcH,KAAKI,UAAU1E,IACzD2D,EAAe,oBATF,kDAWbF,EAAa,gBAXA,0DAAH,sDAeRkB,EAAS,iDAAG,wFAChBR,OAAOC,aAAaQ,WAAW,cAC/B1B,EAAQ,MACRS,EAAe,eAHC,2CAAH,qDAMThB,EAAuB,SAACnC,GAC5BwC,EAAYxC,EAAMI,OAAOC,QAGrB+B,EAAuB,SAACpC,GAC5ByC,EAAYzC,EAAMI,OAAOC,QAGrBgE,EAAU,iDAAG,WAAOlF,EAAOE,EAAQC,GAAtB,oGAET+D,EAAY1D,SAASR,EAAOE,EAAQC,GAF3B,OAGf6D,EAAe,gCACfC,IACAJ,GAAmB,GALJ,gDAOmB,MAA9B,KAAUnC,SAASyD,OACrBrB,EAAa,oDAC0B,MAA9B,KAAUpC,SAASyD,OAC5BrB,EAAa,4DAEbA,EAAa,uCAZA,yDAAH,0DAkBVzE,EAAoB,SAACD,GAEzB,IACE8E,EAAYjC,SAAS7C,EAAK2B,GAAI3B,EAAKgB,OACnC6D,IACAD,EAAe,cACf,MAAOoB,GACPtB,EAAa,0BACbtB,QAAQC,IAAI2C,EAAU1D,YAIpBpC,EAAmB,iDAAG,WAAOF,GAAP,8EACrBoF,OAAOa,QACV,oCAAsCjG,EAAKY,OAFnB,0EAMlBkE,EAAY/B,WAAW/C,EAAK2B,IANV,OAOxBkD,IAEAD,EAAe,gBATS,gDAWxBF,EAAa,4BAXW,yDAAH,sDAwDzB,OACE,gCACE,cAAC,EAAD,CAAcnB,QAASa,IACvB,cAAC,EAAD,CAAgBb,QAASe,IACf,OAATrD,EA3CD,cAAC,EAAD,CACEgC,SAAUA,EACVW,qBAAsBA,EACtBC,qBAAsBA,IAMlB,gCACN,gCACE,uCACA,8BAAI5C,EAAKC,KAAT,kBAA6B,wBAAQS,GAAG,gBAAgBd,QAAS+E,EAApC,uBAC5B7B,EAAMmC,KAAI,SAAAlG,GAAI,OACb,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,kBAAmBA,EACjDC,oBAAqBA,GADZF,EAAK2B,UAKlB6C,EAAkB,gCAAK,cAAC,EAAD,CAAUpD,SAAU0E,IACzC,4BACE,wBAAQjF,QAAS,kBAAM4D,GAAmB,IAA1C,yBAKF,gCACE,uBACA,uBACA,wBAAQ9C,GAAG,wBAAwBd,QAAS,kBAAM4D,GAAmB,IAArE,oCC5LZ0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07e24bc5.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst setToken = (newToken) => {\n  token = 'bearer ' + newToken\n}\n\nconst postBlog = (title, author, url) => {\n  const request = axios.post(baseUrl, { title, author, url }, {\n    headers: { Authorization: token }\n  })\n  return request.then(response => response.data)\n}\n\nconst likeBlog = (id, likes) => {\n  const request = axios.put(baseUrl + '/' + id, { likes: likes + 1 })\n  return request.then(response => response.data)\n}\n\nconst deleteBlog = (id) => {\n  const request = axios.delete(baseUrl + '/' + id, {\n    headers: { Authorization: token }\n  })\n  return request.then(response => response.data)\n}\n\nconst service = {\n  getAll, setToken, postBlog, likeBlog, deleteBlog\n}\n\nexport default service\n","import { React, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, likeButtonClicked, deleteButtonClicked }) => {\n\n  const [visible, setVisible] = useState(false)\n  const blogStyle = {\n    paddingTop: 6,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 6\n  }\n\n  const handleDeleteButton = () => {\n    deleteButtonClicked(blog)\n  }\n\n  const handleLikeButton = () => {\n    likeButtonClicked(\n      blog\n    )\n    blog.likes += 1\n  }\n\n  if (visible) {\n    return (\n      <div style={blogStyle} data-cy='blog-root'>\n        <div><b>Title: </b> {blog.title} <button onClick={() => setVisible(false)}>Hide</button></div>\n        <div><b>Author:</b> {blog.author}</div>\n        <div><b>Url:   </b> {blog.url}</div>\n        <div><b>Likes: </b> {blog.likes} <button data-cy='like-button' onClick={handleLikeButton}>Like</button></div>\n        {blog.user ?\n          <div><b>Added by:</b> {blog.user.name}</div> :\n          <div><b>Added by:</b> Data missing.</div>\n        }\n        <div><button data-cy='delete-button' onClick={handleDeleteButton}>Remove</button></div>\n      </div>\n    )\n  }\n  else\n    return (\n      <div>\n        {blog.title} {blog.author} <button data-cy='show-button' onClick={() => setVisible(true)}>Show</button>\n      </div>\n    )\n}\n\nBlog.propTypes = {\n  blog: PropTypes.object.isRequired,\n  likeButtonClicked: PropTypes.func.isRequired,\n  deleteButtonClicked: PropTypes.func.isRequired\n}\n\nexport default Blog","import { React, useState } from 'react'\n\n\nconst BlogForm = ({\n  postBlog\n}) => {\n\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value)\n  }\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value)\n  }\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    postBlog(title, author, url)\n  }\n\n  return (\n    <div>\n      <h2>Add a new blog</h2>\n      <form onSubmit={handleSubmit}>\n        <p>Title: <input id='title' onChange={handleTitleChange} /></p>\n        <p>Author: <input id='author' onChange={handleAuthorChange} /></p>\n        <p>Url: <input id='url' onChange={handleUrlChange} /></p>\n        <p><button id='post-blog-button' type=\"submit\">Post blog</button></p>\n\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst tryLogin = (username, password) => {\n  console.log('Trying login with ', username, ' ', password)\n  const request = axios.post(baseUrl,\n    { username: username, password: password })\n\n  return request.then(response => {\n    return { username: username, token: response.data.token,\n      name: response.data.name }\n  })\n}\n\n\n\nconst service = { tryLogin }\n\nexport default service","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\nconst ShowErrormsg = ({ message }) => {\n  if (message === null || message === '') {\n    return null\n  }\n  return <div id='error-notification' className=\"error\">{message}</div>\n}\n\nconst ShowSuccessmsg = ( { message } ) => {\n  if (message === null || message === '') {\n    return null\n  }\n  return <div id='success-notification' className=\"success\">{message}</div>\n}\n\nconst LoginPage = (props) => {\n  return (\n    <div>\n      <h2>Login to bloglist app</h2>\n      <form onSubmit={props.tryLogin}>\n        <p>Username <input id=\"username\" onChange={props.handleUsernameChange} />\n        </p>\n        <p>\n          Password <input id=\"password\" type=\"password\" onChange={props.handlePasswordChange} />\n        </p>\n        <p>\n          <button id=\"login-button\" type=\"submit\">Log in</button>\n        </p>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [errormsg, setErrormsg] = useState('')\n  const [successmsg, setSuccessmsg] = useState('')\n  const [blogFormVisible, setBlogFormVisible] = useState(false)\n\n  const triggerError = (message) => {\n    setErrormsg(message)\n    setTimeout(() => {\n      setErrormsg('')\n    }, 5000)\n  }\n\n\n  const triggerSuccess = (message) => {\n    setSuccessmsg(message)\n    setTimeout(() => {\n      setSuccessmsg('')\n    }, 5000)\n  }\n  const refreshBlogs = () => {\n    blogService.getAll().then(blogs => {\n      blogs.sort((first, second) => {\n        if(first.likes > second.likes) {\n          return -1\n        } else if (first.likes < second.likes) {\n          return 1\n        } else {\n          return 0\n        }\n      })\n      setBlogs( blogs )\n    })\n  }\n  useEffect(() => {\n    refreshBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const tryLogin = async (event) => {\n    event.preventDefault()\n    console.log('Attempting to log in...')\n    try {\n      const user = await loginService.tryLogin(username, password)\n      blogService.setToken(user.token)\n\n      setUser(user)\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      triggerSuccess('Login successful')\n    } catch (exception) {\n      triggerError('Login failed')\n    }\n  }\n\n  const tryLogout = async () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    triggerSuccess('Logged out.')\n  }\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value)\n  }\n\n  const submitBlog = async (title, author, url) => {\n    try {\n      await blogService.postBlog(title, author, url)\n      triggerSuccess('New blog posted successfully')\n      refreshBlogs()\n      setBlogFormVisible(false)\n    } catch (exception) {\n      if (exception.response.status === 400) {\n        triggerError('Could not post blog. Title and url are required!')\n      } else if (exception.response.status === 401) {\n        triggerError('Invalid login token. Please logout and then login again.')\n      } else {\n        triggerError('Could not post blog. Error unknown.')\n      }\n    }\n\n  }\n\n  const likeButtonClicked = (blog) => {\n\n    try {\n      blogService.likeBlog(blog.id, blog.likes)\n      refreshBlogs()\n      triggerSuccess('Liked blog')\n    } catch (exception) {\n      triggerError('Error with like button')\n      console.log(exception.response)\n    }\n  }\n\n  const deleteButtonClicked = async (blog) => {\n    if (!window.confirm(\n      'Are you sure you want to delete: ' + blog.title\n    )\n    ) return\n    try {\n      await blogService.deleteBlog(blog.id)\n      refreshBlogs()\n\n      triggerSuccess('Blog deleted')\n    } catch (exception) {\n      triggerError('Error with deleting blog')\n    }\n  }\n\n  const loginPage = () => {\n    return (\n      <LoginPage\n        tryLogin={tryLogin}\n        handleUsernameChange={handleUsernameChange}\n        handlePasswordChange={handlePasswordChange} />)\n  }\n\n\n\n  const loggedInPage = () => {\n    return (<div>\n      <div>\n        <h2>Blogs</h2>\n        <p>{user.name} is logged in. <button id='logout-button' onClick={tryLogout}>Logout</button></p>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} likeButtonClicked={likeButtonClicked}\n            deleteButtonClicked={deleteButtonClicked} />\n        )}\n      </div>\n      {\n        blogFormVisible ? <div><BlogForm postBlog={submitBlog}/>\n          <p>\n            <button onClick={() => setBlogFormVisible(false)}>\n            Cancel\n            </button>\n          </p>\n        </div> :\n          <div>\n            <br/>\n            <br/>\n            <button id='show-blog-form-button' onClick={() => setBlogFormVisible(true)}>\n          Add new blog\n            </button>\n          </div>\n      }\n    </div>)\n  }\n\n\n\n  return (\n    <div>\n      <ShowErrormsg message={errormsg} />\n      <ShowSuccessmsg message={successmsg} />\n      {user === null ?\n        loginPage() :\n        loggedInPage() }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport './index.css'\n\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}